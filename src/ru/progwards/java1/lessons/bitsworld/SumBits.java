package ru.progwards.java1.lessons.bitsworld;

public class SumBits {
    //1.1 Реализовать функцию public static int sumBits(byte value), которая суммирует все биты параметра value.
    public static int sumBits(byte value){
        // Определяем маску для подсчета бит (можно также указать 1 в десятичной записи)
        byte mask = 0b0000_0001;
        // Определяю счетчик для подсчета 1 в байте. Прибавляется на 1 если есть совпадение по крайнему младшему биту
        int count = 0;
        // Определяю цикл на 7 итераций. Так как знак не двигается, а в байте 8 бит получается только 7 можем посчитать
        for (int i = 0; i < 7; i++){
            // Если крайние биты после операции битового & равны 1, т.е. 1 в крайнем правом бите, то прибавляем счетчик
            // сдвигаем наше число (value) на 1 бит вправо и начинаем цикл заново
            // Если не равно 1 то сразу сдивгаем число (value) и еще раз идем по циклу
            if((value & mask) == 1) {
                count++;
                value >>= 1;
                continue;
            }
            value >>= 1;
        }
        // Возвращаем наше значение счетчика
        return count;
    }
    public static void main(String[] args) {
        System.out.println(sumBits ((byte) 127));
    }
}
